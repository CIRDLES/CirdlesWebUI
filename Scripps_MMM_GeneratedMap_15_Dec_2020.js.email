// Mapping file created by Mars Map Maker on 2020-12-15
//
// **************************************************
// Mapping file created with file(s)scripscombined.csv
// This is a mapping file for the organization Scripps Institute of Oceanography (SIO)
//
// Mars Map Maker was created by  Josh Gilley and Robert Niggebrugge
// of CIRDLES.org, with help from James Rundle,
// under the guidance of Principal Investigator Dr. Jim Bowring.
// in coordination with geosamples.org.
//
//                                                                 
// Copyright 2020 Scripps Institute of Oceanography. Licensed under the
// Apache License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License. You may obtain a copy
// of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless
// required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
// OR CONDITIONS OF ANY KIND, either express or implied. See the License
// for the specific language governing permissions and limitations under the License.
//
// **************************************************

const forceEditID0 = () => {
let mapMakerHeader = "<METADATA_ADD>"
let mapMakerIndex = 0  
  return "SIO";
}

const forceEditID1 = () => {
let mapMakerHeader = "<METADATA_ADD>"
let mapMakerIndex = 1
  return "Sediment";
}

const forceEditID2 = () => {
let mapMakerHeader = "<METADATA_ADD>"
let mapMakerIndex = 2
  return "meters";
}

const forceEditID3 = () => {
let mapMakerHeader = "<METADATA_ADD>"
let mapMakerIndex = 3  
  return "Core";
}

const forceEditID4 = () => {
let mapMakerHeader = "FACILITY_CODE"
let mapMakerIndex = 4
  return "Scripps Institute of Oceanography (SIO)";
}


const keyValueString = (scrippsValue, scrippsKey) => {
  return scrippsKey + ' : ' + scrippsValue
}

const delimit = (valueArray) => {
  return valueArray.join(';')
}

const scrippsDate = (scrippsValue) => {
  const y  =  "" + scrippsValue.substr(0,4)
  const d = scrippsValue.substr(6,2)
  const m = scrippsValue.substr(4,2)
  return y + '-' + m + '-' + d + 'T00:00:00Z'
}

let map = {
  user_code: "<METADATA_ADD>",
  material: "<METADATA_ADD>",
  elevation_unit: "<METADATA_ADD>",
  sample_type: "<METADATA_ADD>",
  current_archive: "<METADATA>",
  platform_name: "PLATFORM",
  cruise_field_prgrm: "CRUISE",
  name: "SAMPLE",
  collection_method: "DEVICE",
  collection_start_date: "BEGIN_DATE",
  latitude: "LAT",
  latitude_end: "END_LATMIN",
  longitude: "LON",
  longitude_end: "END_LON",
  elevation: "WATER_DEPTH",
  elevation_end: "END_WATER_DEPTH",
  collector: "PI",
  primary_location_type: "PROVINCE",
  igsn: "IGSN",
  classification: "ROCK_LITH",
  geological_age: [ "AGE",  "ABSOLUTE_AGE_TOP",  "ABSOLUTE_AGE_BOT" ],
  field_name: [ "LITH1",  "TEXT1" ],
  sample_comment: [ "STORAGE_METH",  "SAMPLE_COMMENTS",  "WEIGHT" ],
  description: [ "DESCRIPTION",  "ROCK_MIN",  "WEATH_META",  "REMARK",  "EXHAUST_CODE" ],
  size: [ "CORED_LENGTH",  "CORED_DIAM" ]
}

let logic = { 
  user_code: forceEditID0,
  material: forceEditID1,
  elevation_unit: forceEditID2,
  sample_type: forceEditID3,
  current_archive: forceEditID4,
  collection_start_date: scrippsDate,
  collection_end_date: scrippsDate,
  geological_age: keyValueString,
  field_name: keyValueString,
  description: keyValueString,
  sample_comment: keyValueString,
  size: keyValueString
  }

let combinations = {
  field_name: delimit,
  description: delimit,
  geological_age: delimit,
  sample_comment: delimit,
  size: delimit
}

return {map, logic, combinations}
